@model DemoProject.Models.User
@using DemoProject.Models

<div class="card">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>KULLANICI ADI</th>
                        <th>E-POSTA</th>
                        <th>ROL</th>
                        <th>DÜZENLE</th>
                    </tr>
                </thead>
                <tbody id="userTableBody"></tbody>
            </table>
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center" id="userPagination"></ul>
            </nav>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        const pageSize = 10;
        let currentPage = 1;
        $(document).ready(function () {
            loadUsers(currentPage);
        });

        function loadUsers(page) {
            $.ajax({
                url: '@Url.Action("GetUsersPaged", "Home")',
                data: { page: page, pageSize: pageSize },
                type: 'GET',
                dataType: "json",
                success: function(res) {
                    renderTable(res.users);
                }
            });
        }
        function renderTable(users) {
            let tbody = $('#userTableBody');
            tbody.empty();
            if (users.length === 0) {
                tbody.append('<tr><td colspan="5" class="text-center">Kullanıcı bulunamadı.</td></tr>');
                return;
            }
            users.forEach(user => {
                tbody.append(`
                    <tr>
                        <td>${user.id}</td>
                        <td>${user.kullaniciAdi}</td>
                        <td>${user.ePosta}</td>
                        <td>${user.role || 'admin'}</td>
                        <td>
                            <select class="form-select" id="chooseRole_${user.id}" onchange="updateUserRole(${user.id}, this.value)">
                                <option disabled ${!user.role ? 'selected' : ''}>Seçiniz</option>
                                <option value="Admin" ${user.role === 'Admin' ? 'selected' : ''}>Admin</option>
                                <option value="Personel" ${user.role === 'Personel' ? 'selected' : ''}>Personel</option>
                                <option value="Kullanici" ${user.role === 'Kullanici' ? 'selected' : ''}>Kullanıcı</option>
                            </select>
                        </td>
                    </tr>
                `);
            });
        }
         function loadUserPage(page = 1) {
            currentPage = page;
            $.ajax({
                url: '/Home/GetUsersPaged',
                type: 'GET',
                cache: false,
                data: {
                    page: page,
                    pageSize: pageSize
                },
                success: function(response) {
                    console.log('Backend response:', response);

                    if (response.error) {
                        console.error('Backend Error:', response.message);
                        alert('Sunucu hatası: ' + response.message);
                        return;
                    }
                    const tbody = $('#userTableBody');
                    tbody.empty();
                    if (!response.users || response.users.length === 0) {
                        tbody.append('<tr><td colspan="5" class="text-center">Kullanıcı bulunamadı.</td></tr>');
                        $('#userPagination').empty();
                        return;
                    }
                    response.users.forEach(function(user, index) {
                        $('#userTableBody').append(`
                        <tr id="userRow_${user.id}">
                            <td>${(page - 1) * pageSize + index + 1}</td>
                            <td>${user.kullaniciAdi}</td>
                            <td>${user.ePosta}</td>
                            <td>${user.role || 'admin'}</td>
                            <td>
                                <select class="form-select" id="chooseRole_${user.id}" onchange="updateUserRole(${user.id}, this.value)">
                                    <option disabled ${!user.role ? 'selected' : ''}>Seçiniz</option>
                                    <option value="Admin" ${user.role === 'Admin' ? 'selected' : ''}>Admin</option>
                                    <option value="Personel" ${user.role === 'Personel' ? 'selected' : ''}>Personel</option>
                                    <option value="Kullanici" ${user.role === 'Kullanici' ? 'selected' : ''}>Kullanıcı</option>
                                </select>
                            </td>
                        </tr>
                        `);
                    });
                    generateUserPagination(response.totalCount, page, pageSize);
                },
                error: function(xhr, status, error) {
                    console.error('AJAX Error:', {
                        status: xhr.status,
                        statusText: xhr.statusText,
                        responseText: xhr.responseText,
                        error: error
                    });
                    alert('Kullanıcılar yüklenirken hata oluştu. Console\'u kontrol edin.');
                }
            });
        }
        $(document).ready(function () {
            $('#createUserForm').submit(function (e) {
                e.preventDefault();
                var formData = {
                    KullaniciAdi: $('#createUserForm input[name="KullaniciAdi"]').val(),
                    EPosta: $('#createUserForm input[name="EPosta"]').val(),
                    Parola: $('#createUserForm input[name="Parola"]').val()
                };
                $.ajax({
                    url: '/Home/RegisterUserAjax',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(formData),
                    success: function (response) {
                        console.log(response);
                        if (response.success) {
                            $('#userModal').modal('hide');
                            $('#createUserForm')[0].reset();

                            $('#userTableBody').append(`
                                <tr>
                                    <td>${response.data.id}</td>
                                    <td>${response.data.kullaniciAdi}</td>
                                    <td>${response.data.ePosta}</td>
                                </tr>
                            `);
                        } else {
                            alert('Kayıt başarısız: ' + response.message);
                        }
                    },
                    error: function () {
                        alert('Sunucu hatası oluştu.');
                    }
                });
            });
        });        function updateUserRole(userId, newRole) {
            $.ajax({
                url: '/Home/UpdateUserRole',
                type: 'POST',
                data: { id: userId, role: newRole },
                success: function (response) {
                    console.log("Gelen yanıt:", response);
                    if (response.success) {
                        console.log("Rol güncellendi:", newRole);
                        loadUserPage(currentPage);
                    } else {
                        alert("Güncelleme başarısız: " + response.message);
                    }
                },
                error: function () {
                    alert("Sunucu hatası oluştu.");
                }
            });
        }

        function generateUserPagination(totalCount, currentPage, pageSize) {
            const totalPages = Math.ceil(totalCount / pageSize);
            const pagination = $('#userPagination');
            pagination.empty();

            if (totalPages <= 1) return;

            pagination.append(`
                <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                    <a class="page-link" href="javascript:void(0);" onclick="loadUserPage(1)">
                        <i class="tf-icon bx bx-chevrons-left"></i>
                    </a>
                </li>`);

            pagination.append(`
                <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                    <a class="page-link" href="javascript:void(0);" onclick="loadUserPage(${currentPage - 1})">
                        <i class="tf-icon bx bx-chevron-left"></i>
                    </a>
                </li>`);

            for (let i = 1; i <= totalPages; i++) {
                pagination.append(`
                    <li class="page-item ${i === currentPage ? 'active' : ''}">
                        <a class="page-link" href="javascript:void(0);" onclick="loadUserPage(${i})">${i}</a>
                    </li>`
                );
            }

            pagination.append(`
                <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                    <a class="page-link" href="javascript:void(0);" onclick="loadUserPage(${currentPage + 1})">
                        <i class="tf-icon bx bx-chevron-right"></i>
                    </a>
                </li>`);

            pagination.append(`
                <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                    <a class="page-link" href="javascript:void(0);" onclick="loadUserPage(${totalPages})">
                        <i class="tf-icon bx bx-chevrons-right"></i>
                    </a>
                </li>`);
        }
    </script>
}